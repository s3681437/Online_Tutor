var mongoose=require("mongoose"),express=require("express"),bodyParser=require("body-parser"),cors=require("cors"),app=express();app.use(bodyParser.json({limit:"10mb",extended:!0})),app.use(bodyParser.urlencoded({limit:"10mb",extended:!0})),app.use(cors());var MongoClient=require("mongodb").MongoClient,uri="mongodb+srv://admin:123@cluster0-ym27l.mongodb.net/sept-assignment?retryWrites=true",client=new MongoClient(uri,{useNewUrlParser:!0});mongoose.connect(uri,{useNewUrlParser:!0});var Schema=mongoose.Schema,ObjectId=Schema.ObjectId,serviceSchema=new Schema({serviceName:{type:String,required:!0}}),tutorSchema=new Schema({tutorName:{type:String,required:!0},tutorAge:{type:String,required:!0},tutorGender:{type:String,required:!0},tutorNationality:{type:String,required:!0},tutorSpecialty:{type:String,required:!0},tutorExperience:{type:String,required:!0},busyTime:{type:Array},dateCreated:{type:Date,default:Date.now}}),bookingSchema=new Schema({tutor:{type:String,required:!0},booker:{type:String,required:!0},timeBooking:{type:String,required:!0},dateCreated:{type:Date,default:Date.now}}),serviceModel=mongoose.model("services",serviceSchema),tutorModel=mongoose.model("tutors",tutorSchema),bookingModel=mongoose.model("bookings",bookingSchema);app.route("/services").get(function(e,t){serviceModel.find({},function(e,o){t.json(o)})}).post(function(e,t){serviceModel.create(e.body,function(e,o){e?t.json(e):t.json(o)})}),app.route("/services/:id").put(function(e,t){serviceModel.findByIdAndUpdate(e.params.id,{$set:{serviceName:e.body.serviceName}},function(){}),serviceModel.findById(e.params.id,function(e,o){t.json(o)})}).delete(function(e,t){serviceModel.findByIdAndRemove(e.params.id,function(e,o){t.json(o)})}),app.route("/tutors").get(function(e,t){tutorModel.find({},function(e,o){t.json(o)})}).post(function(e,t){tutorModel.create(e.body,function(e,o){t.json(o)})}),app.route("tutors/:id").get(function(e,t){tutorModel.findById(e.params.id,function(e,o){t.json(o)})}).put(function(e,t){tutorModel.findByIdAndUpdate(e.params.id,{$set:{tutorName:e.body.tutorName,tutorAge:e.body.tutorAge,tutorGender:e.body.tutorGender,tutorExperience:e.body.tutorExperience,tutorNationality:e.body.tutorNationality,tutorSpecialty:e.body.tutorSpecialty,busyTime:e.body.busyTime}},function(){console.log("update successfully")}),tutorModel.findById(e.params.id,function(e,o){t.json(o)})}).delete(function(e,t){tutorModel.findByIdAndRemove(e.params.id,function(e,o){t.json(o)})}),app.route("/bookings").get(function(e,t){bookingModel.find({},function(e,o){t.json(o)})}).post(function(e,t){bookingModel.create(e.body,function(e,o){e?t.json(e):t.json(o)})}),app.route("/bookings/:id").get(function(e,t){bookingModel.findById(e.params.id,function(e,o){t.json(o)})}).put(function(e,t){bookingModel.findByIdAndUpdate(e.params.id,{$set:{serviceName:e.body.serviceName}},function(){console.log("update successfully")}),bookingModel.findById(e.params.id,function(e,o){t.json(o)})}).delete(function(e,t){bookingModel.findByIdAndRemove(e.params.id,function(e,o){t.json(o)})});